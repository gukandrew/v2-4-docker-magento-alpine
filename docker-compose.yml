version: "3.8"
services:
  web:
    build: ./docker/web
    working_dir: /var/www
    volumes:
      - ./www:/var/www
      - ./docker/web/composer-cache:/home/www-data/.composer/cache
      - ./docker/web/php.ini:/etc/php7/php.ini
      - ./ssl-certs:/usr/local/share/ca-certificates
    ports:
      - "80:8081" # comment out if varnish container is used
      - "443:443"
    links:
      - db
      - redis
      - maildev

  front:
    build: ./docker/front
    working_dir: /var/www
    volumes:
      - ./www-front:/var/www
    # ports:
    #   - "8082:8723"
    #   - "10000:10000"

  db:
    build: ./docker/db
    working_dir: /var/lib/mysql
    volumes:
      - ./docker/db/my.cnf:/etc/my.cnf
      - ./docker/db/data:/var/lib/mysql
      - ./db-dumps:/db-dumps
      - ./db-dumps/import.sh:/docker-entrypoint-initdb.d/01-import.sh
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: shop
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento123
    # entrypoint: 'tail -f /dev/null'
    # healthcheck:
    #   disable: true

  # varnish:
  #   build: ./docker/varnish
  #   ports:
  #     - "80:80"
  #   links:
  #     - web

  redis:
    image: redis:6-alpine

  elasticsearch:
    image: magento/magento-cloud-docker-elasticsearch:7.6-1.2


  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - db
    ports:
      - "8080:80"
    environment:
      UPLOAD_LIMIT: 5G

  maildev:
    image: maildev/maildev
    ports:
      - "1025:1025"
      - "1080:1080"
    entrypoint: "node bin/maildev -w 1080 -s 1025"
